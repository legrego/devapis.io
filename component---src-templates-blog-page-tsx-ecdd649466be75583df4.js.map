{"version":3,"sources":["webpack:///./src/pages/blog.tsx","webpack:///./src/templates/blog-page.tsx"],"names":[],"mappings":";;;;;;;;AAAA,mCAA+B;AAC/B,2CAA+B;AAE/B,yCAAgD;AAGhD,yCAAuD;AACvD,mCAA2C;AAe3C,mBAAoC,KAArB;AACb,SAAU,OAAQ,MAAK,KAAK,KAAO;AACnC,SAAW,QAAQ,MAAK,KAAM,MAAO;AACrC,SAAM,EAAY,aAAQ,MAAU;AACpC,SAAe,YAAO,KAAK,KAAM,MAAK,KAAM,MAAW,aAAO;AAEpB;AAC1C,SAAc,4BACX,YAAS,qBACE,IAAC,CAAC,EAAY;AACtB,WAAM,EAAa,aAAY,YAAQ,QAAE,EAAQ,QAAW,YAAQ;AACpE,WAAY,SAAc,YAAO,OAAO,OAAS,SAAkB;AACnE,WAAW,QAAc,YAAM,MAAS,SAAkB;AAE1D,WAAc,QACZ,oBAAC,YAAS,eACR,oBAAC,MAAG,WAAU,WAAU,aACtB,6BACK,KAAQ,OAAqB,qBAAI,KAC9B,QAAQ,OAAqB,qBACnC,WACF,iCACE,6BAAU,OAAE,EAAY,YAAO,SACjB,YAAO,OACf,KACN,6BAAU,OAAE,EAAQ,QAAK,OACX,YAAY,oBAAe,YAK/C;AAEF,WAAoB,cAClB,oBAAC,YAAS,eACA,SACR,0BAAM,OACN,oBAAC,cAAI,WAAG,IAAM,QAEhB;AAEK,YACL,oBAAC,YAAS,WAAI,KAAM,MACX,SAGb;AAEF,IAvCQ,CADR;AA0CK,UACL,oBAAC,YAAS,eAER,oBAAC,YAAS,SAAG,OAGb,kCAGN;AAAE;AAEW,SAyDX,+C;;;;;;;;;;AC3IF,oCAAiC;AAEjC,mBAAe,OAAK;AACP,SA6DX,+C","file":"component---src-templates-blog-page-tsx-ecdd649466be75583df4.js","sourcesContent":["import * as React from \"react\";\r\nimport Link from \"gatsby-link\";\r\nimport { MarkdownRemarkConnection, ImageSharp } from \"../graphql-types\";\r\nimport BlogTitle from \"../components/BlogTitle\";\r\nimport TagsCard from \"../components/TagsCard/TagsCard\";\r\nimport BlogPagination from \"../components/BlogPagination/BlogPagination\";\r\nimport Container from \"../components/Layout/Container\";\r\nimport Box from \"../components/Layout/Box\";\r\n\r\ninterface BlogProps {\r\n  data: {\r\n    tags: MarkdownRemarkConnection;\r\n    posts: MarkdownRemarkConnection;\r\n  };\r\n  pathContext: {\r\n    tag?: string; // only set into `templates/tags-pages.tsx`\r\n  };\r\n  location: {\r\n    pathname: string;\r\n  };\r\n}\r\n\r\nexport default (props: BlogProps) => {\r\n  const tags = props.data.tags.group;\r\n  const posts = props.data.posts.edges;\r\n  const { pathname } = props.location;\r\n  const pageCount = Math.ceil(props.data.posts.totalCount / 10);\r\n\r\n  // TODO export posts in a proper component\r\n  const Posts = (\r\n    <Container>\r\n      {posts.map(({ node }) => {\r\n        const { frontmatter, timeToRead, fields: { slug }, excerpt } = node;\r\n        const avatar = frontmatter.author.avatar.children[0] as ImageSharp;\r\n        const cover = frontmatter.image.children[0] as ImageSharp;\r\n\r\n        const extra = (\r\n          <Container>\r\n            <Box className=\"comment\">\r\n              <img\r\n                src={avatar.responsiveResolution.src}\r\n                srcSet={avatar.responsiveResolution.srcSet}\r\n              />\r\n              <div>\r\n                <div style={{ fontWeight: 400 }}>\r\n                  {frontmatter.author.id}\r\n                </div>\r\n                <div style={{ margin: 0 }}>\r\n                  {frontmatter.updatedDate} - {timeToRead} min read\r\n                </div>\r\n              </div>\r\n            </Box>\r\n          </Container>\r\n        );\r\n\r\n        const description = (\r\n          <Container>\r\n            {excerpt}\r\n            <br />\r\n            <Link to={slug}>Read moreâ€¦</Link>\r\n          </Container>\r\n        );\r\n\r\n        return (\r\n          <Container key={slug}\r\n            isFluid={true}\r\n          />\r\n        );\r\n      })}\r\n    </Container>\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      {/* Title */}\r\n      <BlogTitle />\r\n\r\n      {/* Content */}\r\n      <span>content here</span>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport const pageQuery = graphql`\r\nquery PageBlog {\r\n  # Get tags\r\n  tags: allMarkdownRemark(filter: {frontmatter: {draft: {ne: true}}}) {\r\n    group(field: frontmatter___tags) {\r\n      fieldValue\r\n      totalCount\r\n    }\r\n  }\r\n  # Get posts\r\n  posts: allMarkdownRemark(\r\n    sort: { order: DESC, fields: [frontmatter___updatedDate] },\r\n    filter: {\r\n      frontmatter: { draft: { ne: true } },\r\n      fileAbsolutePath: { regex: \"/blog/\" }\r\n    },\r\n    limit: 10\r\n  ) {\r\n    totalCount\r\n    edges {\r\n      node {\r\n        excerpt\r\n        timeToRead\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          title\r\n          updatedDate(formatString: \"DD MMMM, YYYY\")\r\n          image {\r\n          \tchildren {\r\n              ... on ImageSharp {\r\n                responsiveResolution(width: 700, height: 100) {\r\n                  src\r\n                  srcSet\r\n                }\r\n              }\r\n            }\r\n          }\r\n          author {\r\n            id\r\n            avatar {\r\n              children {\r\n                ... on ImageSharp {\r\n                  responsiveResolution(width: 35, height: 35) {\r\n                    src\r\n                    srcSet\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/blog.tsx","import * as React from \"react\";\r\nimport Blog from \"../pages/blog\";\r\n\r\nexport default Blog;\r\nexport const pageQuery = graphql`\r\nquery TemplateBlogPage($skip: Int) {\r\n  # Get tags\r\n  tags: allMarkdownRemark(filter: {frontmatter: {draft: {ne: true}}}) {\r\n    group(field: frontmatter___tags) {\r\n      fieldValue\r\n      totalCount\r\n    }\r\n  }\r\n\r\n  # Get posts\r\n  posts: allMarkdownRemark(\r\n    sort: { order: DESC, fields: [frontmatter___updatedDate] },\r\n    filter: {\r\n      frontmatter: {\r\n        draft: { ne: true }\r\n      },\r\n      fileAbsolutePath: { regex: \"/blog/\" }\r\n    }\r\n    limit: 10,\r\n    skip: $skip\r\n  ) {\r\n    totalCount\r\n    edges {\r\n      node {\r\n        excerpt\r\n        timeToRead\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          title\r\n          updatedDate(formatString: \"DD MMMM, YYYY\")\r\n          image {\r\n          \tchildren {\r\n              ... on ImageSharp {\r\n                responsiveResolution(width: 700, height: 100) {\r\n                  src\r\n                  srcSet\r\n                }\r\n              }\r\n            }\r\n          }\r\n          author {\r\n            id\r\n            avatar {\r\n              children {\r\n                ... on ImageSharp {\r\n                  responsiveResolution(width: 35, height: 35) {\r\n                    src\r\n                    srcSet\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/templates/blog-page.tsx"],"sourceRoot":""}